{"ast":null,"code":"//! moment-timezone.js\n//! version : 0.5.45\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n  \"use strict\";\n\n  /*global define*/\n  if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('moment')); // Node\n  } else if (typeof define === 'function' && define.amd) {\n    define(['moment'], factory); // AMD\n  } else {\n    factory(root.moment); // Browser\n  }\n})(this, function (moment) {\n  \"use strict\";\n\n  // Resolves es6 module loading issue\n  if (moment.version === undefined && moment.default) {\n    moment = moment.default;\n  }\n\n  // Do not load moment-timezone a second time.\n  // if (moment.tz !== undefined) {\n  // \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n  // \treturn moment;\n  // }\n\n  var VERSION = \"0.5.45\",\n    zones = {},\n    links = {},\n    countries = {},\n    names = {},\n    guesses = {},\n    cachedGuess;\n  if (!moment || typeof moment.version !== 'string') {\n    logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n  }\n  var momentVersion = moment.version.split('.'),\n    major = +momentVersion[0],\n    minor = +momentVersion[1];\n\n  // Moment.js version check\n  if (major < 2 || major === 2 && minor < 6) {\n    logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n  }\n\n  /************************************\n  \tUnpacking\n  ************************************/\n\n  function charCodeToInt(charCode) {\n    if (charCode > 96) {\n      return charCode - 87;\n    } else if (charCode > 64) {\n      return charCode - 29;\n    }\n    return charCode - 48;\n  }\n  function unpackBase60(string) {\n    var i = 0,\n      parts = string.split('.'),\n      whole = parts[0],\n      fractional = parts[1] || '',\n      multiplier = 1,\n      num,\n      out = 0,\n      sign = 1;\n\n    // handle negative numbers\n    if (string.charCodeAt(0) === 45) {\n      i = 1;\n      sign = -1;\n    }\n\n    // handle digits before the decimal\n    for (i; i < whole.length; i++) {\n      num = charCodeToInt(whole.charCodeAt(i));\n      out = 60 * out + num;\n    }\n\n    // handle digits after the decimal\n    for (i = 0; i < fractional.length; i++) {\n      multiplier = multiplier / 60;\n      num = charCodeToInt(fractional.charCodeAt(i));\n      out += num * multiplier;\n    }\n    return out * sign;\n  }\n  function arrayToInt(array) {\n    for (var i = 0; i < array.length; i++) {\n      array[i] = unpackBase60(array[i]);\n    }\n  }\n  function intToUntil(array, length) {\n    for (var i = 0; i < length; i++) {\n      array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000); // minutes to milliseconds\n    }\n    array[length - 1] = Infinity;\n  }\n  function mapIndices(source, indices) {\n    var out = [],\n      i;\n    for (i = 0; i < indices.length; i++) {\n      out[i] = source[indices[i]];\n    }\n    return out;\n  }\n  function unpack(string) {\n    var data = string.split('|'),\n      offsets = data[2].split(' '),\n      indices = data[3].split(''),\n      untils = data[4].split(' ');\n    arrayToInt(offsets);\n    arrayToInt(indices);\n    arrayToInt(untils);\n    intToUntil(untils, indices.length);\n    return {\n      name: data[0],\n      abbrs: mapIndices(data[1].split(' '), indices),\n      offsets: mapIndices(offsets, indices),\n      untils: untils,\n      population: data[5] | 0\n    };\n  }\n\n  /************************************\n  \tZone object\n  ************************************/\n\n  function Zone(packedString) {\n    if (packedString) {\n      this._set(unpack(packedString));\n    }\n  }\n  function closest(num, arr) {\n    var len = arr.length;\n    if (num < arr[0]) {\n      return 0;\n    } else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {\n      return len - 1;\n    } else if (num >= arr[len - 1]) {\n      return -1;\n    }\n    var mid;\n    var lo = 0;\n    var hi = len - 1;\n    while (hi - lo > 1) {\n      mid = Math.floor((lo + hi) / 2);\n      if (arr[mid] <= num) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    return hi;\n  }\n  Zone.prototype = {\n    _set: function (unpacked) {\n      this.name = unpacked.name;\n      this.abbrs = unpacked.abbrs;\n      this.untils = unpacked.untils;\n      this.offsets = unpacked.offsets;\n      this.population = unpacked.population;\n    },\n    _index: function (timestamp) {\n      var target = +timestamp,\n        untils = this.untils,\n        i;\n      i = closest(target, untils);\n      if (i >= 0) {\n        return i;\n      }\n    },\n    countries: function () {\n      var zone_name = this.name;\n      return Object.keys(countries).filter(function (country_code) {\n        return countries[country_code].zones.indexOf(zone_name) !== -1;\n      });\n    },\n    parse: function (timestamp) {\n      var target = +timestamp,\n        offsets = this.offsets,\n        untils = this.untils,\n        max = untils.length - 1,\n        offset,\n        offsetNext,\n        offsetPrev,\n        i;\n      for (i = 0; i < max; i++) {\n        offset = offsets[i];\n        offsetNext = offsets[i + 1];\n        offsetPrev = offsets[i ? i - 1 : i];\n        if (offset < offsetNext && tz.moveAmbiguousForward) {\n          offset = offsetNext;\n        } else if (offset > offsetPrev && tz.moveInvalidForward) {\n          offset = offsetPrev;\n        }\n        if (target < untils[i] - offset * 60000) {\n          return offsets[i];\n        }\n      }\n      return offsets[max];\n    },\n    abbr: function (mom) {\n      return this.abbrs[this._index(mom)];\n    },\n    offset: function (mom) {\n      logError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n      return this.offsets[this._index(mom)];\n    },\n    utcOffset: function (mom) {\n      return this.offsets[this._index(mom)];\n    }\n  };\n\n  /************************************\n  \tCountry object\n  ************************************/\n\n  function Country(country_name, zone_names) {\n    this.name = country_name;\n    this.zones = zone_names;\n  }\n\n  /************************************\n  \tCurrent Timezone\n  ************************************/\n\n  function OffsetAt(at) {\n    var timeString = at.toTimeString();\n    var abbr = timeString.match(/\\([a-z ]+\\)/i);\n    if (abbr && abbr[0]) {\n      // 17:56:31 GMT-0600 (CST)\n      // 17:56:31 GMT-0600 (Central Standard Time)\n      abbr = abbr[0].match(/[A-Z]/g);\n      abbr = abbr ? abbr.join('') : undefined;\n    } else {\n      // 17:56:31 CST\n      // 17:56:31 GMT+0800 (台北標準時間)\n      abbr = timeString.match(/[A-Z]{3,5}/g);\n      abbr = abbr ? abbr[0] : undefined;\n    }\n    if (abbr === 'GMT') {\n      abbr = undefined;\n    }\n    this.at = +at;\n    this.abbr = abbr;\n    this.offset = at.getTimezoneOffset();\n  }\n  function ZoneScore(zone) {\n    this.zone = zone;\n    this.offsetScore = 0;\n    this.abbrScore = 0;\n  }\n  ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n    this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n    if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n      this.abbrScore++;\n    }\n  };\n  function findChange(low, high) {\n    var mid, diff;\n    while (diff = ((high.at - low.at) / 12e4 | 0) * 6e4) {\n      mid = new OffsetAt(new Date(low.at + diff));\n      if (mid.offset === low.offset) {\n        low = mid;\n      } else {\n        high = mid;\n      }\n    }\n    return low;\n  }\n  function userOffsets() {\n    var startYear = new Date().getFullYear() - 2,\n      last = new OffsetAt(new Date(startYear, 0, 1)),\n      lastOffset = last.offset,\n      offsets = [last],\n      change,\n      next,\n      nextOffset,\n      i;\n    for (i = 1; i < 48; i++) {\n      nextOffset = new Date(startYear, i, 1).getTimezoneOffset();\n      if (nextOffset !== lastOffset) {\n        // Create OffsetAt here to avoid unnecessary abbr parsing before checking offsets\n        next = new OffsetAt(new Date(startYear, i, 1));\n        change = findChange(last, next);\n        offsets.push(change);\n        offsets.push(new OffsetAt(new Date(change.at + 6e4)));\n        last = next;\n        lastOffset = nextOffset;\n      }\n    }\n    for (i = 0; i < 4; i++) {\n      offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n      offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n    }\n    return offsets;\n  }\n  function sortZoneScores(a, b) {\n    if (a.offsetScore !== b.offsetScore) {\n      return a.offsetScore - b.offsetScore;\n    }\n    if (a.abbrScore !== b.abbrScore) {\n      return a.abbrScore - b.abbrScore;\n    }\n    if (a.zone.population !== b.zone.population) {\n      return b.zone.population - a.zone.population;\n    }\n    return b.zone.name.localeCompare(a.zone.name);\n  }\n  function addToGuesses(name, offsets) {\n    var i, offset;\n    arrayToInt(offsets);\n    for (i = 0; i < offsets.length; i++) {\n      offset = offsets[i];\n      guesses[offset] = guesses[offset] || {};\n      guesses[offset][name] = true;\n    }\n  }\n  function guessesForUserOffsets(offsets) {\n    var offsetsLength = offsets.length,\n      filteredGuesses = {},\n      out = [],\n      checkedOffsets = {},\n      i,\n      j,\n      offset,\n      guessesOffset;\n    for (i = 0; i < offsetsLength; i++) {\n      offset = offsets[i].offset;\n      if (checkedOffsets.hasOwnProperty(offset)) {\n        continue;\n      }\n      guessesOffset = guesses[offset] || {};\n      for (j in guessesOffset) {\n        if (guessesOffset.hasOwnProperty(j)) {\n          filteredGuesses[j] = true;\n        }\n      }\n      checkedOffsets[offset] = true;\n    }\n    for (i in filteredGuesses) {\n      if (filteredGuesses.hasOwnProperty(i)) {\n        out.push(names[i]);\n      }\n    }\n    return out;\n  }\n  function rebuildGuess() {\n    // use Intl API when available and returning valid time zone\n    try {\n      var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      if (intlName && intlName.length > 3) {\n        var name = names[normalizeName(intlName)];\n        if (name) {\n          return name;\n        }\n        logError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n      }\n    } catch (e) {\n      // Intl unavailable, fall back to manual guessing.\n    }\n    var offsets = userOffsets(),\n      offsetsLength = offsets.length,\n      guesses = guessesForUserOffsets(offsets),\n      zoneScores = [],\n      zoneScore,\n      i,\n      j;\n    for (i = 0; i < guesses.length; i++) {\n      zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n      for (j = 0; j < offsetsLength; j++) {\n        zoneScore.scoreOffsetAt(offsets[j]);\n      }\n      zoneScores.push(zoneScore);\n    }\n    zoneScores.sort(sortZoneScores);\n    return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n  }\n  function guess(ignoreCache) {\n    if (!cachedGuess || ignoreCache) {\n      cachedGuess = rebuildGuess();\n    }\n    return cachedGuess;\n  }\n\n  /************************************\n  \tGlobal Methods\n  ************************************/\n\n  function normalizeName(name) {\n    return (name || '').toLowerCase().replace(/\\//g, '_');\n  }\n  function addZone(packed) {\n    var i, name, split, normalized;\n    if (typeof packed === \"string\") {\n      packed = [packed];\n    }\n    for (i = 0; i < packed.length; i++) {\n      split = packed[i].split('|');\n      name = split[0];\n      normalized = normalizeName(name);\n      zones[normalized] = packed[i];\n      names[normalized] = name;\n      addToGuesses(normalized, split[2].split(' '));\n    }\n  }\n  function getZone(name, caller) {\n    name = normalizeName(name);\n    var zone = zones[name];\n    var link;\n    if (zone instanceof Zone) {\n      return zone;\n    }\n    if (typeof zone === 'string') {\n      zone = new Zone(zone);\n      zones[name] = zone;\n      return zone;\n    }\n\n    // Pass getZone to prevent recursion more than 1 level deep\n    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n      zone = zones[name] = new Zone();\n      zone._set(link);\n      zone.name = names[name];\n      return zone;\n    }\n    return null;\n  }\n  function getNames() {\n    var i,\n      out = [];\n    for (i in names) {\n      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n        out.push(names[i]);\n      }\n    }\n    return out.sort();\n  }\n  function getCountryNames() {\n    return Object.keys(countries);\n  }\n  function addLink(aliases) {\n    var i, alias, normal0, normal1;\n    if (typeof aliases === \"string\") {\n      aliases = [aliases];\n    }\n    for (i = 0; i < aliases.length; i++) {\n      alias = aliases[i].split('|');\n      normal0 = normalizeName(alias[0]);\n      normal1 = normalizeName(alias[1]);\n      links[normal0] = normal1;\n      names[normal0] = alias[0];\n      links[normal1] = normal0;\n      names[normal1] = alias[1];\n    }\n  }\n  function addCountries(data) {\n    var i, country_code, country_zones, split;\n    if (!data || !data.length) return;\n    for (i = 0; i < data.length; i++) {\n      split = data[i].split('|');\n      country_code = split[0].toUpperCase();\n      country_zones = split[1].split(' ');\n      countries[country_code] = new Country(country_code, country_zones);\n    }\n  }\n  function getCountry(name) {\n    name = name.toUpperCase();\n    return countries[name] || null;\n  }\n  function zonesForCountry(country, with_offset) {\n    country = getCountry(country);\n    if (!country) return null;\n    var zones = country.zones.sort();\n    if (with_offset) {\n      return zones.map(function (zone_name) {\n        var zone = getZone(zone_name);\n        return {\n          name: zone_name,\n          offset: zone.utcOffset(new Date())\n        };\n      });\n    }\n    return zones;\n  }\n  function loadData(data) {\n    addZone(data.zones);\n    addLink(data.links);\n    addCountries(data.countries);\n    tz.dataVersion = data.version;\n  }\n  function zoneExists(name) {\n    if (!zoneExists.didShowError) {\n      zoneExists.didShowError = true;\n      logError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n    }\n    return !!getZone(name);\n  }\n  function needsOffset(m) {\n    var isUnixTimestamp = m._f === 'X' || m._f === 'x';\n    return !!(m._a && m._tzm === undefined && !isUnixTimestamp);\n  }\n  function logError(message) {\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error(message);\n    }\n  }\n\n  /************************************\n  \tmoment.tz namespace\n  ************************************/\n\n  function tz(input) {\n    var args = Array.prototype.slice.call(arguments, 0, -1),\n      name = arguments[arguments.length - 1],\n      out = moment.utc.apply(null, args),\n      zone;\n    if (!moment.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {\n      out.add(zone.parse(out), 'minutes');\n    }\n    out.tz(name);\n    return out;\n  }\n  tz.version = VERSION;\n  tz.dataVersion = '';\n  tz._zones = zones;\n  tz._links = links;\n  tz._names = names;\n  tz._countries = countries;\n  tz.add = addZone;\n  tz.link = addLink;\n  tz.load = loadData;\n  tz.zone = getZone;\n  tz.zoneExists = zoneExists; // deprecated in 0.1.0\n  tz.guess = guess;\n  tz.names = getNames;\n  tz.Zone = Zone;\n  tz.unpack = unpack;\n  tz.unpackBase60 = unpackBase60;\n  tz.needsOffset = needsOffset;\n  tz.moveInvalidForward = true;\n  tz.moveAmbiguousForward = false;\n  tz.countries = getCountryNames;\n  tz.zonesForCountry = zonesForCountry;\n\n  /************************************\n  \tInterface with Moment.js\n  ************************************/\n\n  var fn = moment.fn;\n  moment.tz = tz;\n  moment.defaultZone = null;\n  moment.updateOffset = function (mom, keepTime) {\n    var zone = moment.defaultZone,\n      offset;\n    if (mom._z === undefined) {\n      if (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {\n        mom._d = moment.utc(mom._a)._d;\n        mom.utc().add(zone.parse(mom), 'minutes');\n      }\n      mom._z = zone;\n    }\n    if (mom._z) {\n      offset = mom._z.utcOffset(mom);\n      if (Math.abs(offset) < 16) {\n        offset = offset / 60;\n      }\n      if (mom.utcOffset !== undefined) {\n        var z = mom._z;\n        mom.utcOffset(-offset, keepTime);\n        mom._z = z;\n      } else {\n        mom.zone(offset, keepTime);\n      }\n    }\n  };\n  fn.tz = function (name, keepTime) {\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n      }\n      this._z = getZone(name);\n      if (this._z) {\n        moment.updateOffset(this, keepTime);\n      } else {\n        logError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n      }\n      return this;\n    }\n    if (this._z) {\n      return this._z.name;\n    }\n  };\n  function abbrWrap(old) {\n    return function () {\n      if (this._z) {\n        return this._z.abbr(this);\n      }\n      return old.call(this);\n    };\n  }\n  function resetZoneWrap(old) {\n    return function () {\n      this._z = null;\n      return old.apply(this, arguments);\n    };\n  }\n  function resetZoneWrap2(old) {\n    return function () {\n      if (arguments.length > 0) this._z = null;\n      return old.apply(this, arguments);\n    };\n  }\n  fn.zoneName = abbrWrap(fn.zoneName);\n  fn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n  fn.utc = resetZoneWrap(fn.utc);\n  fn.local = resetZoneWrap(fn.local);\n  fn.utcOffset = resetZoneWrap2(fn.utcOffset);\n  moment.tz.setDefault = function (name) {\n    if (major < 2 || major === 2 && minor < 9) {\n      logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n    }\n    moment.defaultZone = name ? getZone(name) : null;\n    return moment;\n  };\n\n  // Cloning a moment should include the _z property.\n  var momentProperties = moment.momentProperties;\n  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n    // moment 2.8.1+\n    momentProperties.push('_z');\n    momentProperties.push('_a');\n  } else if (momentProperties) {\n    // moment 2.7.0\n    momentProperties._z = null;\n  }\n\n  // INJECT DATA\n\n  return moment;\n});","map":{"version":3,"names":["root","factory","module","exports","require","define","amd","moment","version","undefined","default","VERSION","zones","links","countries","names","guesses","cachedGuess","logError","momentVersion","split","major","minor","charCodeToInt","charCode","unpackBase60","string","i","parts","whole","fractional","multiplier","num","out","sign","charCodeAt","length","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbrs","population","Zone","packedString","_set","closest","arr","len","mid","lo","hi","floor","prototype","unpacked","_index","timestamp","target","zone_name","Object","keys","filter","country_code","indexOf","parse","max","offset","offsetNext","offsetPrev","tz","moveAmbiguousForward","moveInvalidForward","abbr","mom","utcOffset","Country","country_name","zone_names","OffsetAt","at","timeString","toTimeString","match","join","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","scoreOffsetAt","offsetAt","abs","replace","findChange","low","high","diff","Date","userOffsets","startYear","getFullYear","last","lastOffset","change","next","nextOffset","push","sortZoneScores","a","b","localeCompare","addToGuesses","guessesForUserOffsets","offsetsLength","filteredGuesses","checkedOffsets","j","guessesOffset","hasOwnProperty","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","e","zoneScores","zoneScore","getZone","sort","guess","ignoreCache","toLowerCase","addZone","packed","normalized","caller","link","getNames","getCountryNames","addLink","aliases","alias","normal0","normal1","addCountries","country_zones","toUpperCase","getCountry","zonesForCountry","country","with_offset","map","loadData","dataVersion","zoneExists","didShowError","needsOffset","m","isUnixTimestamp","_f","_a","_tzm","message","console","error","input","args","Array","slice","call","arguments","utc","apply","isMoment","add","_zones","_links","_names","_countries","load","fn","defaultZone","updateOffset","keepTime","_z","_isUTC","isValid","_d","z","Error","abbrWrap","old","resetZoneWrap","resetZoneWrap2","zoneName","zoneAbbr","local","setDefault","momentProperties","toString"],"sources":["C:/Users/Shrut/Downloads/weatherApp-Reactjs-master/weather-app1/node_modules/moment-timezone/moment-timezone.js"],"sourcesContent":["//! moment-timezone.js\n//! version : 0.5.45\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.45\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tfunction closest (num, arr) {\n\t\tvar len = arr.length;\n\t\tif (num < arr[0]) {\n\t\t\treturn 0;\n\t\t} else if (len > 1 && arr[len - 1] === Infinity && num >= arr[len - 2]) {\n\t\t\treturn len - 1;\n\t\t} else if (num >= arr[len - 1]) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar mid;\n\t\tvar lo = 0;\n\t\tvar hi = len - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor((lo + hi) / 2);\n\t\t\tif (arr[mid] <= num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\treturn hi;\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\ti = closest(target, untils);\n\t\t\tif (i >= 0) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\tlastOffset = last.offset,\n\t\t\toffsets = [last],\n\t\t\tchange, next, nextOffset, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnextOffset = new Date(startYear, i, 1).getTimezoneOffset();\n\t\t\tif (nextOffset !== lastOffset) {\n\t\t\t\t// Create OffsetAt here to avoid unnecessary abbr parsing before checking offsets\n\t\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t\tlast = next;\n\t\t\t\tlastOffset = nextOffset;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\tcheckedOffsets = {},\n\t\t\ti, j, offset, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\toffset = offsets[i].offset;\n\t\t\tif (checkedOffsets.hasOwnProperty(offset)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tguessesOffset = guesses[offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedOffsets[offset] = true;\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tout  = moment.utc.apply(null, args),\n\t\t\tzone;\n\n\t\tif (!moment.isMoment(input) && needsOffset(out) && (zone = getZone(name))) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC && mom.isValid()) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}